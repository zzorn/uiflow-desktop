package org.uiflow.desktop.chart;

import org.uiflow.desktop.chart.axis.Axis;
import org.uiflow.desktop.chart.axis.AxisOrientation;
import org.uiflow.desktop.chart.axis.DefaultAxisView;
import org.uiflow.desktop.chart.axis.TimeAxis;
import org.uiflow.desktop.chart.chartlayer.BarLayer;
import org.uiflow.desktop.chart.dataseries.ArrayListDataSeries;
import org.uiflow.desktop.chart.dataseries.DataSeries;
import org.uiflow.desktop.chart.dataseries.DataSeriesConverter;
import org.uiflow.desktop.chart.dataseries.RelativePosMapper;
import org.uiflow.desktop.gradient.ColorGradients;
import org.uiflow.desktop.ui.SimpleFrame;
import org.uiflow.desktop.utils.ChainedMapper;
import org.uiflow.desktop.utils.ColorMapper;

import java.awt.*;
import java.util.Date;

/**
 *
 */
public class ChartExample {

    public static void main(String[] args) {

        DefaultChart chart = new DefaultChart("Global Warming vs Number Of Pirates");

        final TimeAxis time = new TimeAxis();
        final Axis<Integer> numberOfPirates = new Axis<Integer>("Number of Pirates", Integer.class);
        final Axis<Double> globalWarming = new Axis<Double>("Global Warming", Double.class);

        final long startTime = Date.UTC(-200, 1, 1, 0, 0, 0);
        final long endTime = Date.UTC(100, 1, 1, 0, 0, 0);
        final long oneYear = (long) (365.25*24*60*60*1000);
        chart.addAxisView(new DefaultAxisView<Long>(time,
                                                    startTime, endTime, AxisOrientation.HORIZONTAL_BOTTOM));
        final DefaultAxisView<Integer> numberOfPiratesAxis = chart.addAxisView(new DefaultAxisView<Integer>(
                numberOfPirates,
                0,
                750,
                AxisOrientation.VERTICAL_RIGHT));
        chart.addAxisView(new DefaultAxisView<Double>(globalWarming, -5.0, 5.0, AxisOrientation.VERTICAL_LEFT));

        // This data is professionally generated by carefully pulling numbers out of thin air, and should not be trusted.
        // TODO: We need some gradient backed data series, that allows placing values with arbitrary indexes.  May need to generify gradient first though.
        DataSeries<Long, Integer> numberOfPiratesOverTime = new ArrayListDataSeries<Long, Integer>(time, startTime, 11*oneYear,
                                                                                                   30,
                                                                                                   65,
                                                                                                   123,
                                                                                                   150,
                                                                                                   220,
                                                                                                   303,
                                                                                                   554,
                                                                                                   434,
                                                                                                   421,
                                                                                                   443,
                                                                                                   389,
                                                                                                   323,
                                                                                                   298,
                                                                                                   212,
                                                                                                   187,
                                                                                                   123,
                                                                                                   87,
                                                                                                   65,
                                                                                                   43,
                                                                                                   55,
                                                                                                   32,
                                                                                                   17,
                                                                                                   6,
                                                                                                   4,
                                                                                                   3,
                                                                                                   0,
                                                                                                   2,
                                                                                                   0,
                                                                                                   0,
                                                                                                   1,
                                                                                                   0,
                                                                                                   0);

        final BarLayer<Long, Integer> pirateChart = new BarLayer<Long, Integer>(time, numberOfPirates);
        pirateChart.barHeight.setData(numberOfPiratesOverTime);

        // TODO: Create shortcuts to create converters to color or range.  Maybe as methods on the data series?  Or at least as some statical utility functions, or maybe as methods in a visualization channel?

        final ChainedMapper<Integer, Double, Color> numberOfPiratesToColorConverter = ChainedMapper.chain(
                new RelativePosMapper<Integer>(numberOfPiratesAxis),
                new ColorMapper<Double>(ColorGradients.RAINBOW));

        final DataSeries<Long, Color> barColorDataSeries = DataSeriesConverter.create(numberOfPiratesOverTime, numberOfPiratesToColorConverter);
        pirateChart.barColor.setData(barColorDataSeries);

        chart.addLayer(pirateChart);

        new SimpleFrame("Chart Example", chart.getUi());

    }

}
